{"map":"{\"version\":3,\"sources\":[\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/serviceWorker.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/components/Card.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/components/CardList.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/components/SearchBox.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/components/Scroll.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/containers/App.js\",\"/home/oshadha/React-App/robofriends/RoboFriends-App---React/src/index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Card\",\"props\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"_ref\",\"robots\",\"cardArray\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"style\",\"overflow\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"console\",\"log\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"React\",\"Component\",\"ReactDOM\",\"render\",\"containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"+JAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wGCHSC,EAbF,SAACC,GAAU,IACfC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACrB,OACCC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,2CACdH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAI,SAASC,IAAG,wBAAAC,OAA0BP,EAA1B,cACrBC,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAAA,KAAA,KAAA,IAAML,EAAN,KACAG,EAAAC,EAAAC,cAAA,IAAA,KAAA,IAAKJ,EAAL,QCaWS,EAlBE,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACZC,EAAYD,EAAOE,IAAI,SAACC,EAAMC,GACnC,OACCb,EAAAC,EAAAC,cAACY,EAAD,CACCC,IAAKF,EACLd,GAAIU,EAAOI,GAAGd,GACdF,KAAMY,EAAOI,GAAGhB,KAChBC,MAAOW,EAAOI,GAAGf,UAIpB,OACCE,EAAAC,EAAAC,cAAA,MAAA,KACEQ,ICFWM,EAbG,SAAAR,GAAiCA,EAA/BS,YAA+B,IAAlBC,EAAkBV,EAAlBU,aAChC,OACClB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,QAAA,CACCC,UAAU,mCACVgB,KAAK,SACLC,YAAY,gBACZC,SAAWH,MCEAI,EATA,SAAC1B,GACf,OACCI,EAAAC,EAAAC,cAAA,MAAA,CAAKqB,MAAQ,CAACC,SAAU,SAAUC,OAAO,kBAAmBC,OAAO,UACjE9B,EAAM+B,WCmDKC,cAjDd,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAoBDI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CAAErB,YAAaoB,EAAME,OAAOC,SApB1CX,EAAKY,MAAQ,CACZhC,OAAO,GACPQ,YAAY,IAEbyB,QAAQC,IAAI,eANAd,mFAWM,IAAAe,EAAAZ,KAClBa,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKN,SAAS,CAAE7B,OAAQwC,MAEvCP,QAAQC,IAAI,sDAWL,IAAAO,EACyBlB,KAAKS,MAA7BhC,EADDyC,EACCzC,OAAQQ,EADTiC,EACSjC,YACVkC,EAAiB1C,EAAO2C,OAAQ,SAAA3C,GACrC,OAAOA,EAAOZ,KAAKwD,cAAcC,SAASrC,EAAYoC,iBAGvD,OAAqB,IAAlB5C,EAAO8C,OACFvD,EAAAC,EAAAC,cAAA,KAAA,KAAA,aAGNF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACdH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,MAAd,iBACAH,EAAAC,EAAAC,cAACsD,EAAD,CAAWtC,aAAcc,KAAKI,iBAC9BpC,EAAAC,EAAAC,cAACuD,EAAD,KACCzD,EAAAC,EAAAC,cAACwD,EAAD,CAAUjD,OAAQ0C,aA1CNQ,EAAAA,EAAMC,WCcxBC,EAAAA,EAASC,OACP9D,EAAAC,EAAAC,cAAC6D,EAAD,MACDC,SAASC,eAAe,SN2GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\n\\nconst Card = (props) => {\\n\\tconst { name, email, id} = props;\\n\\treturn(\\n\\t\\t<div className='tc bg-light-green dib br3 pad3 ma2 grow'>\\n\\t\\t\\t<img alt='Robots' src={`https://robohash.org/${id}?200x200`} />\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2> {name} </h2>\\n\\t\\t\\t\\t<p> {email} </p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t);\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n// import {robots} from './robots';\\n\\nconst CardList = ({robots}) => {\\n\\tconst cardArray = robots.map((user, i) =>{\\n\\t\\treturn (\\n\\t\\t\\t<Card \\n\\t\\t\\t\\tkey={i} \\n\\t\\t\\t\\tid={robots[i].id} \\n\\t\\t\\t\\tname={robots[i].name} \\n\\t\\t\\t\\temail={robots[i].email} \\n\\t\\t\\t/>\\n\\t\\t);\\n\\t})\\n\\treturn (\\n\\t\\t<div>\\n\\t\\t\\t{cardArray}\\n\\t\\t</div>\\n\\t);\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({searchfield, searchChange}) => {\\n\\treturn (\\n\\t\\t<div className='pa2'>\\n\\t\\t\\t<input \\n\\t\\t\\t\\tclassName='pa3 ba b--green bg-lightest-blue' \\n\\t\\t\\t\\ttype='search' \\n\\t\\t\\t\\tplaceholder='search robots' \\n\\t\\t\\t\\tonChange= {searchChange}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t);\\n}\\n\\nexport default SearchBox; \",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n\\treturn(\\n\\t\\t<div style={ {overflow: 'scroll', border:'1px solid black', height:'450px' } }>\\n\\t\\t\\t{props.children}\\n\\t\\t</div>\\n\\t);\\n};\\n\\n\\nexport default Scroll;\",\"import React from 'react';\\nimport CardList from '../components/CardList';\\n// import {robots} from './robots';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\n\\nclass App extends React.Component{\\n\\tconstructor(){\\n\\t\\tsuper()\\n\\t\\tthis.state = {\\n\\t\\t\\trobots:[],\\n\\t\\t\\tsearchfield:''\\n\\t\\t}\\n\\t\\tconsole.log('Constructor');\\n\\t}\\n\\n\\n\\n\\tcomponentDidMount(){\\n\\t\\tfetch('https://jsonplaceholder.typicode.com/users')\\n\\t\\t.then(response => response.json())\\n\\t\\t.then(users => this.setState({ robots: users }));\\n\\n\\t\\tconsole.log('componentDidMount');\\n\\t}\\n\\n\\n\\n\\tonSearchChange = (event) =>{\\n\\t\\tthis.setState({ searchfield: event.target.value })\\n\\t}\\n\\n\\n\\n\\trender(){\\n\\t\\tconst { robots, searchfield } = this.state;  //destructuring\\n\\t\\tconst filteredRobots = robots.filter( robots =>{\\n\\t\\t\\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\\n\\t\\t})\\n\\n\\t\\tif(robots.length === 0){\\n\\t\\t\\treturn <h1> Loading </h1>\\n\\t\\t}else{\\n\\t\\t\\treturn (\\n\\t\\t\\t\\t<div className='tc'>\\n\\t\\t\\t\\t\\t<h1 className='f1'> RoboFriends </h1>\\n\\t\\t\\t\\t\\t<SearchBox searchChange={this.onSearchChange} />\\n\\t\\t\\t\\t\\t<Scroll>\\n\\t\\t\\t\\t\\t\\t<CardList robots={filteredRobots} />\\n\\t\\t\\t\\t\\t</Scroll>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t);\\n\\t\\t}\\n\\t}\\n}\\n\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'tachyons';\\nimport App from './containers/App';\\n// import {\\n//   MDBContainer,\\n//   MDBRow,\\n//   MDBCol,\\n//   MDBCard,\\n//   MDBCardBody,\\n//   MDBModalFooter,\\n//   MDBIcon,\\n//   MDBCardHeader,\\n//   MDBBtn,\\n//   MDBInput\\n// } from \\\"mdbreact\\\";\\n// import FormPage from './FormPage';\\n\\nReactDOM.render(\\n\\t\\t<App/>\\n,document.getElementById('root')\\n);\\n\\n\\n\\n\\n\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,n){},16:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(2),c=n.n(o);n(14),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(15);var l=n(3),i=n(4),s=n(6),u=n(5),h=n(7),m=function(e){var t=e.name,n=e.email,a=e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pad3 ma2 grow\"},r.a.createElement(\"img\",{alt:\"Robots\",src:\"https://robohash.org/\".concat(a,\"?200x200\")}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\" \",t,\" \"),r.a.createElement(\"p\",null,\" \",n,\" \")))},d=function(e){var t=e.robots,n=t.map(function(e,n){return r.a.createElement(m,{key:n,id:t[n].id,name:t[n].name,email:t[n].email})});return r.a.createElement(\"div\",null,n)},b=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:t}))},f=function(e){return r.a.createElement(\"div\",{style:{overflow:\"scroll\",border:\"1px solid black\",height:\"450px\"}},e.children)},g=function(e){function t(){var e;return Object(l.a)(this,t),(e=Object(s.a)(this,Object(u.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value})},e.state={robots:[],searchfield:\"\"},console.log(\"Constructor\"),e}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e.setState({robots:t})}),console.log(\"componentDidMount\")}},{key:\"render\",value:function(){var e=this.state,t=e.robots,n=e.searchfield,a=t.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return 0===t.length?r.a.createElement(\"h1\",null,\" Loading \"):r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",{className:\"f1\"},\" RoboFriends \"),r.a.createElement(b,{searchChange:this.onSearchChange}),r.a.createElement(f,null,r.a.createElement(d,{robots:a})))}}]),t}(r.a.Component);c.a.render(r.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n(16)}},[[8,1,2]]]);","extractedComments":[]}